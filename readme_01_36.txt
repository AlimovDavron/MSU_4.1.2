Документация.

Метод сведение уравнения к системе второго порядка, нахождения решения этой системы ДУ методом Адамса-Мултона и
метод Ньютона для решения уравнения.

1. Описание работы программы.

    Программа решает задачу поиска функции y(x) при заданном дифференциальном уравнении второго порядка вида:
    y'' + p(x)y' + q(x)y = r(x)

    Производится замена z = y' и уравнение второго порядка сводится к системе

    {
        y' = z
        z' = -p(x)z - q(x)y + r(x)
    }

    с начальными значениями на левой границе y(a) = c, z(a) = t, где t - параметр.

    Методом Ньютона подбирается значение параметра t для уравнения F(t) - d = 0, где
    F(t) - значение приближения в точке b, найденное методом Адамса Мультона.

    Решение системы дифференциальных уравнений с начальными значениями y(a) = c, z(a) = t производится
    методом Адамса Мультона, которое состоит из трёх этапов.
    На первом этапе используется метод Рунге Кутта 4 порядка для нахождения первых четырех значений
    искомых функций системы.
    На втором этапе (предиктор) используется метод Адамса Башфорта 4 порядка для приблжения значения на следующей точке.
    На третьем этапе (корректор) используется метод Адамса Мультона 4 порядка для более точного приближения (коррекции)
    значений функций в следующей точке. Полученные значения на этом этапе сохраняются и происходит переход ко второму
    этапе с обновленными значениями. Второй и третий этап повторяются до тех пор, пока не будут найдены значения
    функций в точке b с шагом h.

2. Инструкция по использованию.
	Для работы программы необходима программа gnuplot, которая предоставлена в сборке.
		При установке ОБЯЗАТЕЛЬНО нужно нажать на галку добавления в перменные среды операционной системы.

	По-умолчанию программа, при запуске ехе файла, считывает входные данные из файла input_01_36.txt и записывает в файл output_01_36.txt.
	Произвольные файлы для входных и выходных данных задаются параметрами в консоли и имеют вид:
		./interpolation [input_file] [output_file]

	Входные данные:

		a b c d h eps

	где a, b соответственно левая и правая границы, c, d - соответственно значения искомой функции в точках a и b
	h - шаг метода, eps - точность для метода Ньютона

	В файле init_functions.c необходимо ввести функции p(x), q(x), r(x).
	Также в данном файле имеется опциональная функция groundTruth(x), резульатом работы программы является
	вывод графика функции groundTruth(x) и приближения решения уравнения с шагом h на отрезке [a, b].
	Предполагается, что пользователь введёт в groundTruth искомую функцию для оценки качества приближения.

	Выходные данные:

	В выходном файле будет выведено (b - a) / h + 1 строк вида:
	<Точка> <Значение приближения на точке>
	Запустится программа gnuplot с графиком функции groundTruth и приближением.


3. Коды возвращаемых ошибок:

	0 - Программа успешно отработала
	1 - Ошибка. ValidationError: There is no such file. Файла для входных данных не существует.
	2 - Ошибка. Недостаточно данных для решения задачи (Не соблюдён формат входных данных и некоторых данных не хватает)
		Вывод в консоль будет иметь вид: ValidationError: There is no enough parameters.
	3 - Ошибка. Некорректные входные данные. (Возможнная причина: в данных содержится мусор или, например, a - строка)
		Вывод в консоль будет иметь вид: ValidationError: Incorrect input.

4. Описание исходного кода.

	Функции реализованные в файле main_01_36.c:
		1. int validateFile(char* filename)
			Аргументы: строка
			Описание: Принимает на вход строку и проверяет существование файла с таким названием
			Вывод: 0 - такого файла не существует, 1 - существует

		2. int readInputData(char *inputFile, double** X, double** FX, int *n, double *a, double *b, int *k, int *p)
			Аргументы: строка, указатель, указатель, указатель, указатель, указатель, указатель, указатель
			Описание: Принимает на вход указатели на переменные и выделяет память для них
			Возвращаемое значение:
				0 - Функция успешно отработала
				2 - Ошибка. Недостаточно данных для решения задачи (Не соблюдён формат входных данных и некоторых данных не хватает)
					Вывод в консоль будет иметь вид: Error. Not enough data to solve problem.
				3 - Ошибка. Некорректные входные данные. (Возможнная причина: в данных содержится мусор или, например, n - вещественное число)
					Вывод в консоль будет иметь вид: Incorrect input.

		3. int main
			Описание: реализует интерфейс взаимодействия с подпрограммой для рисования и подпрограммой для решения задачи


	Функции реализованные в файле odu_01_36.c:
		1. void AdamsMoultonMethod(double a, double b, double h, double y0, double z0, double *tmp, double* result)
			Аргументы: число, число, число, число, число, указатель на массив временной памяти и указатель на массив для результата
			Описание: Принимает на вход данные необходимые для решения системы дифференциальных уравнений первого порядка и записывает
			результат в массив result. Количество памяти необходимое для метода возвращается в функциях memsize_result, memsize_tmp
			Вывод: нет

		2. double NewtonMethod(double a, double b, double h, double ya, double yb, double eps, double *tmp, double* result)
			Аргументы: число, число, число, число, число, число, указатель на массив временной памяти и указатель на массив для результата
			Описание: Принимает на вход a, b, c, d, h, eps и указатели на массивы дополнительной памяти и результирующий.
			Функция реализует метод Ньютона для нахождения значения параметра t (подробнее читайте описание программы)
			Вывод: Число - значение параметра t, в массиве result находится приближение искомой функции с оптимальным параметром.


	Функции реализованные в файле plot_01_36.c:
		1. void draw(double a, double b, double h, double* result)
			Аргументы: число, число, число, указатель на массив со значениями приближения
			Описание: Принимает на вход точки, отрезок [a, b], шаг h, значения приближения и рисует графики функции
			groundTruth и приближения решения искомой функции на заданном отрезке
			Вывод: запускает программу gnuplot и исует графики функции
            groundTruth и приближения решения искомой функции на заданном отрезке